cmake_minimum_required(VERSION 2.6)

project (eddpractica1 CXX)

set(EDDPRACTICA1_HEADERS eddpractica1.h nodos.h)

set(PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(EDDPRACTICA1_CODEGEN_DIR "${PROJECT_BINARY_DIR}/codegen")

PREPEND(EDDPRACTICA1_HEADERS_PATHS ${PROJECT_SOURCE_DIR} ${EDDPRACTICA1_HEADERS})

CODEGEN_FILES(EDDPRACTICA1_CODEGEN_SOURCES ${EDDPRACTICA1_CODEGEN_DIR} ${EDDPRACTICA1_HEADERS})

add_custom_command(OUTPUT ${EDDPRACTICA1_CODEGEN_SOURCES}
    COMMAND ${NGREST_BIN_PATH}ngrestcg -i "${PROJECT_SOURCE_DIR}" -o ${EDDPRACTICA1_CODEGEN_DIR} -t service ${EDDPRACTICA1_HEADERS}
    DEPENDS ${EDDPRACTICA1_HEADERS_PATHS}
)

file(GLOB EDDPRACTICA1_SOURCES ${PROJECT_SOURCE_DIR}/*.cpp)

list(APPEND EDDPRACTICA1_SOURCES ${EDDPRACTICA1_CODEGEN_SOURCES})

include_directories(${PROJECT_SOURCE_DIR} $ENV{NGREST_EXT_INCLUDES})

add_library(eddpractica1 MODULE ${EDDPRACTICA1_SOURCES})

set_target_properties(eddpractica1 PROPERTIES PREFIX "")
set_target_properties(eddpractica1 PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SERVICES_DIR}"
)

target_link_libraries(eddpractica1 ngrestutils ngrestcommon ngrestjson ngrestengine $ENV{NGREST_EXT_LIBS})
