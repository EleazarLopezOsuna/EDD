// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest
// DO NOT EDIT. ANY CHANGES WILL BE LOST

#include <ngrest/utils/Log.h>
#include <ngrest/utils/fromcstring.h>
#include <ngrest/utils/tostring.h>
#include <ngrest/utils/Exception.h>
#include <ngrest/common/ObjectModel.h>
#include <ngrest/common/ObjectModelUtils.h>
#include <ngrest/common/Message.h>
#include "nodocolaWrapper.h"



// struct Recurso

void ::RecursoSerializer::serialize(::ngrest::MessageContext* context, const Recurso& value, ::ngrest::Node* node)
{
    ::ngrest::NamedNode* oldFirstChildNode = static_cast< ::ngrest::Object*>(node)->firstChild;
    ::ngrest::NamedNode* dominioNode = context->pool->alloc< ::ngrest::NamedNode>("dominio");
    static_cast< ::ngrest::Object*>(node)->firstChild = dominioNode;
// SERIALIZE : std::string string
    dominioNode->node = context->pool->alloc< ::ngrest::Value>(::ngrest::ValueType::String, value.dominio.c_str());
// END SERIALIZE: std::string string
    ::ngrest::NamedNode* contenidoNode = context->pool->alloc< ::ngrest::NamedNode>("contenido");
    dominioNode->nextSibling = contenidoNode;
// SERIALIZE : std::string string
    contenidoNode->node = context->pool->alloc< ::ngrest::Value>(::ngrest::ValueType::String, value.contenido.c_str());
// END SERIALIZE: std::string string
    contenidoNode->nextSibling = oldFirstChildNode;
}

void ::RecursoSerializer::deserialize(const ::ngrest::Node* node, Recurso& value)
{
    NGREST_ASSERT(node->type == ::ngrest::NodeType::Object, "Unexpected node type while deserializing ::Recurso");
    const ::ngrest::Object* object = static_cast<const ::ngrest::Object*>(node);
    ::ngrest::ObjectModelUtils::getChildValue(object, "dominio", value.dominio);
    ::ngrest::ObjectModelUtils::getChildValue(object, "contenido", value.contenido);
}





