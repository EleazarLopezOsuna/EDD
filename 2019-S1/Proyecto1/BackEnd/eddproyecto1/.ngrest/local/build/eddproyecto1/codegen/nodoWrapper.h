// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest
// DO NOT EDIT. ANY CHANGES WILL BE LOST

#ifndef NODOWRAPPER_H
#define NODOWRAPPER_H

#include <string>

#include "nodo.h"
namespace ngrest {
struct MessageContext;
}




struct CatedraticoSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Catedratico& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Catedratico& value);
};

struct CursoSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Curso& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Curso& value);
};

struct SalonSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Salon& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Salon& value);
};

struct HoraSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Hora& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Hora& value);
};

struct MatrizSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Matriz& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Matriz& value);
};

struct DiaSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Dia& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Dia& value);
};

struct AsignacionSerializer
{
    static void serialize(::ngrest::MessageContext* context, const Asignacion& value, ::ngrest::Node* node);
    static void deserialize(const ::ngrest::Node* node, Asignacion& value);
};



#endif // NODOWRAPPER_H

